doctype html
html
  head
    meta name="viewport" content="width=device-width, initial-scale=1"
    title
      | IshaOps
    = csrf_meta_tags
    = stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload'
    = javascript_include_tag 'application', 'data-turbolinks-track': 'reload'

  body
    nav.navbar.navbar-expand-lg.navbar-dark.bg-primary
      = link_to 'IshaOps', root_path, class: 'navbar-brand'

      button.navbar-toggler aria-controls="navbarSupportedContent" aria-expanded="false" aria-label=("Toggle navigation") data-target="#navbarSupportedContent" data-toggle="collapse" type="button"
        span.navbar-toggler-icon
      #navbarSupportedContent.collapse.navbar-collapse
        .navbar-nav style='width:100%'
          - if !current_user
            = link_to('Sign Up', new_user_registration_path, class: 'nav-item nav-link')
            = link_to('Sign In', new_user_session_path, class: 'nav-item nav-link')
          - else
            = link_to('Meditators', participants_path, class: 'nav-item nav-link')
            = link_to('Volunteers', users_path, class: 'nav-item nav-link')
            = link_to('Calling Tasks', call_tasks_path, class: 'nav-item nav-link')
            = link_to('Current Calling Task', call_task_path(current_user.last_incomplete_calling_task.id), class: 'nav-item nav-link btn btn-success') if current_user.incomplete_calling_task?

          -if current_user &.role == 'admin'
            = link_to('Centers', centers_path, class: 'nav-item nav-link')
            = link_to('Import PinCodes', admin_import_pin_codes_path, class: 'nav-item nav-link')
            = link_to('Import Participants', admin_import_participants_path, class: 'nav-item nav-link')
            = link_to('Logout', destroy_user_session_path, method: :delete, class: 'nav-item nav-link ml-auto')
    br
    br

    .container

      - if flash[:info]
        p.alert.alert-warning = flash[:info].html_safe
        br
      - if flash[:notice]
        p.alert.alert-success = flash[:notice].html_safe
        br
      - if flash[:alert]
        p.alert.alert-danger = flash[:alert].html_safe
        br

      = yield

      br
      br
